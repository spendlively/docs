//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////НАСЛЕДОВАНИЕ////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////


//Наследование VS Композиция
Наследуем, если:
1. Оба класса из одной предметной области
2. Наследник является корректным подтипом (в терминах LSP — прим. пер.) предка
3. Код предка необходим либо хорошо подходит для наследника
4. Наследник в основном добавляет логику
5. Принцип замещение Барбары Лисков

//Неправильное наследование
- родитель добавляет много лишнего функционала
- разная предметная область



//////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////UML////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////
//Виды связей
- Наследование 	[Незакрашенный треугольник и сплошная линия к родителю] 
- Реализация 	[Незакрашенный треугольник и пунктирная линия к интерфейсу] 
- Ассоциация 	[Стрелка и сплошная линия К объекту который используют]
(объекты равноправны)
- Агрегация 	[Незакрашенный ромб и сплошная линия ОТ объекта который добавляют]
(частный случай ассоциации, объекты неравноправны, имеется вложенность)
- Агрегация 	[Закрашенный ромб и сплошная линия ОТ объекта который добавляют]
(частный случай агрегации, вложенный объект уничтожается вместе с контейнером)
- Зависимость 	[Стрелка и пунктирная линия]
